--------------------------------------------------------------------------------
-- üóÇÔ∏è DROP TABELAS (CASO EXISTAM)
--------------------------------------------------------------------------------
DROP TABLE inscricoes CASCADE CONSTRAINTS;
DROP TABLE eventos CASCADE CONSTRAINTS;

--------------------------------------------------------------------------------
-- üèóÔ∏è CRIA√á√ÉO DAS TABELAS
--------------------------------------------------------------------------------

-- Tabela de eventos dispon√≠veis no sistema
CREATE TABLE eventos (
    id NUMBER PRIMARY KEY,
    titulo VARCHAR2(100),
    local VARCHAR2(100)
);

-- Tabela de inscri√ß√µes realizadas por participantes em eventos
CREATE TABLE inscricoes (
    id NUMBER PRIMARY KEY,
    nome_participante VARCHAR2(100),
    id_evento NUMBER
);

--------------------------------------------------------------------------------
-- üì• INSER√á√ÉO DE DADOS
--------------------------------------------------------------------------------

-- Eventos cadastrados (alguns com inscri√ß√µes, outros n√£o)
INSERT INTO eventos VALUES (1, 'Palestra sobre IA', 'Audit√≥rio Central');
INSERT INTO eventos VALUES (2, 'Workshop de SQL', 'Sala 3');
INSERT INTO eventos VALUES (3, 'Semin√°rio de Ciberseguran√ßa', 'Sala 7');
INSERT INTO eventos VALUES (4, 'Encontro de Devs', 'Sala 2');

-- Inscri√ß√µes realizadas (com evento v√°lido, inv√°lido e nulo)
INSERT INTO inscricoes VALUES (1, 'Alice Santos', 1);
INSERT INTO inscricoes VALUES (2, 'Bruno Oliveira', 1);
INSERT INTO inscricoes VALUES (3, 'Carlos Mendes', 2);
INSERT INTO inscricoes VALUES (4, 'Diana Lopes', 5);   -- Evento inexistente
INSERT INTO inscricoes VALUES (5, 'Eduardo Lima', NULL); -- Sem evento vinculado

--------------------------------------------------------------------------------
-- üîé CONSULTAS EXEMPLO COM RIGHT JOIN
--------------------------------------------------------------------------------

-- Consulta 1: Lista todos os eventos cadastrados, mesmo sem inscri√ß√µes.
-- RIGHT JOIN garante que todos os eventos (tabela da direita) apare√ßam no resultado.
SELECT DISTINCT 
    eventos.id, 
    eventos.titulo, 
    eventos.local
FROM 
    inscricoes
RIGHT JOIN 
    eventos ON inscricoes.id_evento = eventos.id
ORDER BY eventos.id;

-- Consulta 2: Lista todas as inscri√ß√µes realizadas, mesmo com eventos inv√°lidos ou inexistentes.
-- RIGHT JOIN garante que todas as inscri√ß√µes (tabela da direita) sejam exibidas.
SELECT 
    inscricoes.id, 
    inscricoes.nome_participante, 
    inscricoes.id_evento
FROM 
    eventos
RIGHT JOIN 
    inscricoes ON eventos.id = inscricoes.id_evento;
